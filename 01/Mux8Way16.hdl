// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Mux4Way16(a=a, b=b, c=c, d=d, sel=sel[0..1], out=abcd);
    Mux4Way16(a=e, b=f, c=g, d=h, sel=sel[0..1], out=efgh);
    Not(in=sel[2], out=Notsel2);
    And16(a=abcd, b[0]=Notsel2, b[1]=Notsel2, b[2]=Notsel2, b[3]=Notsel2, b[4]=Notsel2, b[5]=Notsel2, b[6]=Notsel2, b[7]=Notsel2, b[8]=Notsel2, b[9]=Notsel2, b[10]=Notsel2, b[11]=Notsel2, b[12]=Notsel2, b[13]=Notsel2, b[14]=Notsel2, b[15]=Notsel2, out=abcdAndNotsel2);
    And16(a=efgh, b[0]=sel[2], b[1]=sel[2], b[2]=sel[2], b[3]=sel[2], b[4]=sel[2], b[5]=sel[2], b[6]=sel[2], b[7]=sel[2], b[8]=sel[2], b[9]=sel[2], b[10]=sel[2], b[11]=sel[2], b[12]=sel[2], b[13]=sel[2], b[14]=sel[2], b[15]=sel[2], out=efghAndsel2);
    Or16(a=abcdAndNotsel2, b=efghAndsel2, out=out);
}
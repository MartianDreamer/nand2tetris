// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=Load0, b=Load1, c=Load2, d=Load3, e=Load4, f=Load5, g=Load6, h=Load7);
    Register(in=in, load=Load0, out=Out0);
    Register(in=in, load=Load1, out=Out1);
    Register(in=in, load=Load2, out=Out2);
    Register(in=in, load=Load3, out=Out3);
    Register(in=in, load=Load4, out=Out4);
    Register(in=in, load=Load5, out=Out5);
    Register(in=in, load=Load6, out=Out6);
    Register(in=in, load=Load7, out=Out7);
    Mux8Way16(a=Out0, b=Out1, c=Out2, d=Out3, e=Out4, f=Out5, g=Out6, h=Out7, sel=address, out=out);
}
